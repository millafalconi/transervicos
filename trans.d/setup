#!/usr/bin/env bash
# vim: ft=sh

SUBCOMMAND_DESC="Verifique o setup do projeto"
SUBCOMMAND_HELP=$(cat <<EOH
Usage ${MAIN_COMMAND} ${SUBCOMMAND} [check] [install]

check Verifica se todas as dependências estão instaladas.
install TODO!

EOH
)

function msg_installed() {
  in_green "OK: "${1}" instalado"
}

function msg_not_installed() {
  in_red "NOK: "${1}" é necessário. "${1}" não está instalado"
}

function is_plugin_installed() {
  if [[ $(${1} plugin list | grep "${2}") = *${2}* ]]; then
    msg_installed ${2}
    return
  fi
  msg_not_installed ${2}
}

function is_installed() {
  [ -x "$(command -v ${1})" ]
}

function check_version() {
  if is_installed ${1}; then
    min=1.9
    current=$(${1} --version | head -n 1 | awk '{print $NF}' | cut -c 1-3)

    if [ 1 -eq `echo "${current} < ${min}" | bc` ]; then
      in_red "NOK: versão do ansible é menor que ${min}. atualize o ansible."
      return
    fi
    in_green "OK: versão do ansible é maior ou igual a ${min}"
  else
    in_red "NOK: não foi possivel verificar versão do ansible. ansible não instalado"
  fi
}

function check() {
  if is_installed ${1}; then
    msg_installed ${1}
  else
    msg_not_installed ${1}
  fi
}

function check_setup() {
  check "virtualbox"
  check "vagrant"
  is_plugin_installed "vagrant" "vagrant-cachier"
  check "ansible"
  check_version "ansible"
}

function install_dependencies() {
  if is_installed "ansible"; then
    echo "ansible installed"
  else
    echo "not ansible installed"
  fi
}

is_help_mode "${@}" && return

case ${1} in
  check)
    check_setup
    ;;
  install)
    install_dependencies
  ;;
esac
